stages:
  prepare_dataset:
    cmd: python -m mllam_data_prep data/datastore.yaml --output data/datastore.zarr
    deps:
    - data/datastore.yaml
    outs:
    - data/datastore.zarr
  create_graph-slurm:
    cmd: python -m neural_lam.create_graph --config_path data/config.yaml --name 1level
      --levels 1
    params:
    - data/config.yaml:
      - datastore
    deps:
    - data/datastore.zarr
    outs:
    - data/graph/
  train:
    cmd:
    - sbatch -W machines/slurm.train.sh --config_path $PWD/data/config.yaml --logger mlflow
    params:
    - data/training_params.yaml:
      - model
      - graph
      - epochs
      - batch_size
      - hidden_dim
      - processor_layers
      - metrics_watch
      - num_workers
      - num_nodes
      - val_steps_to_log
    deps:
    - versions.yaml
    - data/graph/
    - data/config.yaml
    - data/datastore.yaml
    outs:
    - saved_models
  evaluate:
    cmd:
    - python train_wrapper.py --config_path $PWD/data/config.yaml --eval val --load
      $PWD/saved_models/*/last.ckpt --logger mlflow
    params:
    - data/training_params.yaml:
      - model
      - graph
      - epochs
      - batch_size
      - hidden_dim
      - num_workers
      - processor_layers
      - metrics_watch
      - val_steps_to_log
    deps:
    - versions.yaml
    - data/graph/
    - data/config.yaml
    - data/datastore.yaml
    - saved_models
    plots:
    - evaluation/plots
